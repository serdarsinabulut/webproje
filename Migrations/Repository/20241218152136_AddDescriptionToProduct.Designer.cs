// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreApp.Models;

#nullable disable

namespace webproje.Migrations.Repository
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20241218152136_AddDescriptionToProduct")]
    partial class AddDescriptionToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("CartItem", b =>
                {
                    b.Property<int>("CartItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CartItemID");

                    b.HasIndex("ProductID");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("StoreApp.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductModel")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Description = "",
                            Price = 17000m,
                            ProductModel = "",
                            ProductName = "Computer"
                        },
                        new
                        {
                            ProductID = 2,
                            Description = "",
                            Price = 1000m,
                            ProductModel = "",
                            ProductName = "Keyboard"
                        },
                        new
                        {
                            ProductID = 3,
                            Description = "",
                            Price = 500m,
                            ProductModel = "",
                            ProductName = "Mouse"
                        },
                        new
                        {
                            ProductID = 4,
                            Description = "",
                            Price = 7000m,
                            ProductModel = "",
                            ProductName = "Mointor"
                        },
                        new
                        {
                            ProductID = 5,
                            Description = "",
                            Price = 1500m,
                            ProductModel = "",
                            ProductName = "Deck"
                        });
                });

            modelBuilder.Entity("CartItem", b =>
                {
                    b.HasOne("StoreApp.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
